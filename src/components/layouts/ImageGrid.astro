---
interface Image {
  url: string;
  alt: string;
  caption?: string;
}

interface Props {
  images: Image[];
  columns?: 2 | 3 | 4;
}

const { images, columns = 3 } = Astro.props;
---

<div class={`image-grid columns-${columns}`}>
  {images.map(image => (
    <div class="grid-item">
      <img src={image.url} alt={image.alt} />
      {image.caption && <p class="caption">{image.caption}</p>}
    </div>
  ))}
</div>

<style>
  .image-grid {
    display: grid;
    gap: 1.5rem;
    margin-bottom: 3rem;
  }
  
  .columns-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .columns-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  
  .columns-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  
  .grid-item img {
    width: 100%;
    border-radius: 8px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.1);
  }
  
  .caption {
    font-size: 0.9rem;
    color: #666;
    margin-top: 0.5rem;
    text-align: center;
  }
  
  @media (max-width: 768px) {
    .columns-3, .columns-4 {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .image-grid {
      grid-template-columns: 1fr;
    }
  }
</style>